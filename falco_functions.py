import os
import yaml
from config import *
import sys
import csv

##############################################
#  Check if Falco rules files exist          #
#    - if they don't create the file         #
#    - returns file handles                  #
##############################################

def checkFalcoRulesFilesExists():
    
    try:
        if not os.path.isfile(falco_ipv4_rules_file):
            if debug == True: print(" - File " + falco_ipv4_rules_file + " didn't exist - creating it.")
            f = open(falco_ipv4_rules_file,"a")
            f.write("# This Falco rules file is autogenerated by falco-taxii-stix-connect - please do not alter manually\n")
            f.write("- list: malicious_ip_list\n")
            f.write("  items: []\n")
            f.close()
    except Exception as err:
        print(f"Couldn't create Falco rules file " + falco_ipv4_rules_file + ". Please check the directory exists. Error: {err=}, {type(err)=}")
        sys.exit(0)
    

    try:
        if not os.path.isfile(falco_domain_rules_file):
            if debug == True: print(" - File " + falco_domain_rules_file + " didn't exist - creating it.")
            f = open(falco_domain_rules_file,"a")
            f.write("# This Falco rules file is autogenerated by falco-taxii-stix-connect - please do not alter manually\n")
            f.write("- list: malicious_domain_list\n")
            f.write("  items: []\n")
            f.close()
    except Exception as err:
        print(f"Couldn't create Falco rules file " + falco_domain_rules_file + ". Please check the directory exists. Error: {err=}, {type(err)=}")
        sys.exit(0)

##############################################
#  Open Falco Rules file and read as YAML    #
#    - returns a PyYAML object               #
##############################################

def returnFalcoRulesFileYaml(rules_file):
    with open(rules_file, "r") as stream:
        try:
            rules_file_yaml = yaml.safe_load(stream)
        except yaml.YAMLError as exc:
            print(f"Couldn't read Falco rules file " + rules_file + ". Please check the file exists, is readable and is YAML formatted. Error {err=}, {type(err)=}")
            sys.exit(0)
    stream.close()
    return rules_file_yaml


#################################################
#  Open Falco Rules file and write YAML output  #
#    - returns a PyYAML object                  #
#################################################

def writeFalcoRulesFileYaml(rules_file, list_name, yaml_string):
    try:
        with open(rules_file, "w") as stream:
            f = open(rules_file,"w")
            f.write("# This Falco rules file is autogenerated by falco-taxii-stix-connect - please do not alter manually\n")
            f.write("- list: " + list_name + "\n")
            f.write("  items: " + yaml_string + "\n")
        f.close()
    except yaml.YAMLError as exc:
            print(f"Couldn't write Falco rules file " + rules_file + ". Please check the file exists, is readable and is YAML formatted. Error {err=}, {type(err)=}")
            sys.exit(0)
    return 
    
##############################################
#  Write CSV File                            #
#      - no return value                     #
##############################################
def createFalcoCSVFile(input_dict, filename):
    
    with open(filename, 'w', newline='\n') as file:
        writer = csv.writer(file)
        for hash in input_dict.keys():
            writer.writerow([hash,str(input_dict[hash][0])])

    
        

